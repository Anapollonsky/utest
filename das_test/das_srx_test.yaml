do:
  - <<: *bci    
    send: "/pltf/txPath/setAttn 8 VAR_SRX_TEST_ATTEN"
    wait_after: .4

  - <<: *bcis
    send: "/pltf/txPath/setRfSwitches 0 0"

  - <<: *bcis
    send: "/pltf/txPath/readSrxPower 0"
    print_response:
    store_regex:
      regexes: '= (.*)[\r\n]'
      store_as: "srx_power0"
    check_number:
      input1: "srx_power0"
      input2: "VAR_SRX_TEST_FWD_LIM"
      operation: ">="

  - <<: *bcis
    send: "/pltf/txPath/setRfSwitches 0 1"

  - <<: *bcis
    send: "/pltf/txPath/readSrxPower 0"
    print_response:
    store_regex:
      regexes: '= (.*)[\r\n]'
      store_as: "srx_power1"
    check_number:
      input1: "srx_power1"
      input2:
        input1: "srx_power0"
        input2: "7"
        operation: "/"
      operation: "<"
 
  - <<: *bcis
    send: "/pltf/txPath/setRfSwitches 0 9"

  - <<: *bcis
    send: "/pltf/txPath/readSrxPower 0"
    print_response:
    store_regex:
      regexes: "= (.*)[\r\n]"
      store_as: "srx_power2"
    check_number:
      input1: "srx_power2"
      input2: "VAR_SRX_TEST_OFF_LIM"
      operation: "<"

  - <<: *bcis
    send: "/pltf/txPath/setRfSwitches 0 0"
  - <<: *bcis
    send: "/pltf/rxpath/fpgawrite 0x204 0x0"
  - <<: *bcis
    send: "/pltf/rxpath/fpgawrite 0xd 0x40"
  - <<: *bcis
    send: "/pltf/rxpath/fpgawrite 0x12 0x3"
  - <<: *bcis
    send: "/pltf/rxpath/fpgawrite 0x0 0xc077"
  - <<: *bcis
    send: "/pltf/rxpath/fpgawrite 0x12 0x0"


  - <<: *bci
    send: "/pltf/bsp/readfpgasram /tmp/VAR_SRX_TEST_FILE 12288000 2 0x01800000"
    wait_after: 5

  - <<: *bftp
    rcwd: /tmp
    lcwd: /home/aapollon/utest/das_test
    get: VAR_SRX_TEST_FILE

  - <<: *shell
    send: ./das_capture_power.m VAR_SRX_TEST_FILE 307.2 0 10 
    expect: "Power in region"
    print_response:


